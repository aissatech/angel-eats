##### Angel Eats

This is a web application for the management of clinical and nutritional diet

=====================

ATTENZIONE!!! DIROTTATA WEBAPP FATTA CON CHROME DEV SUL HOST FIREBASE diet4dummies.firebaseapp.io,
INVECE DI angel-eats.firebase.io (CHE SARA' USATA PER IL HACKATHONA KODING)
IN QUESTO SENSO, BASTA MODIFICARE IL FILE DELL'APP firebase.json
{
  "firebase": "diet4dummies",
  "public": ".",
  "ignore": [
    "firebase.json",
    "**/.*",
    "**/node_modules/**"
  ]
}

invece di

{
  "firebase": "angel-eats",
  "public": ".",
  "ignore": [
    "firebase.json",
    "**/.*",
    "**/node_modules/**"
  ]
}


=====================


### Install node e npm

$ sudo apt-get install nodejs nodejs-dev npm    OK

### Install bower

$ npm install -g bower (serve utente root che si fa con $ sudo su - per ritornare "mortale" $ exit)    OK

### Tools
Chrome Dev Tools v0.17, Node.js and Firebase

### Install Firebase Tools

$ npm install -g firebase-tools    OK

### Updating Previously Installed Firebase Tools

$ npm update -g firebase-tools    OK

### DEPLOY YOUR WEBSITE

$ cd into your website directory and run

### Initialize your app

$ firebase init    OK

### Then deploy your website with

$ firebase deploy


### Bower & Polymer


$ bower init    OK

$ bower install --save Polymer/polymer    OK

$ bower update    OK




## Install Angular

$ bower install angular

## Install Angular Fire (for Firebase)

$ bower install angularfire --save



##Installing Polymer -

If you’re ready to start your own project, you can install Polymer in one of several ways:

Bower. Recommended. Bower manages dependencies, so installing a component also installs any missing dependencies. Bower also handles updating installed components. For more information, see Installing with Bower.

ZIP file. Includes all dependencies, so you can unzip it and start using it immediately. The ZIP file requires no extra tools, but doesn’t provide a built-in method for updating dependencies. For more information, see Installing from ZIP files.

Github. When you clone a component from Github, you need to manage all of the dependencies yourself. If you’d like to hack on the project or submit a pull request, see setting up Polymer with git.

When you install Polymer using Bower or the ZIP file, you get the Web Components polyfill library. Using the polyfills ensures that you can use Polymer with browsers that don’t support the Web Components specifications natively.

Note: For information about installing elements from the Core and Paper element collection, see Using elements.

Note: The PolymerLabs github repo contains a number of unsupported elements that are either experimental or deprecated. In particular, the polymer-elements and polymer-ui-elements collections represent earlier work superseded by the Polymer Core elements and Paper elements.

##Installing with Bower

The recommended way to install Polymer 0.5.1 is through Bower. To install Bower, see the Bower web site.

Bower removes the hassle of dependency management when developing or consuming elements. When you install a component, Bower makes sure any dependencies are installed as well.

Project setup
If you haven’t created a bower.json file for your application, run this command from the root of your project:

$ bower init

This generates a basic bower.json file. Some of the questions, like “What kind of modules do you expose,” can be ignored by pressing Enter.

The next step is to install Polymer:

$ bower install --save Polymer/polymer

Bower adds a bower_components/ folder in the root of your project and fills it with Polymer and its dependencies.

Tip: --save adds the item as a dependency in your app’s bower.json:
{
  "name": "my-project",
  "version": "0.0.0",
  "dependencies": {
    "polymer": "Polymer/polymer#~0.5.1"
  }
}

Updating packages
When a new version of Polymer is available, run bower update in your app directory to update your copy:

$ bower update
This updates all packages in bower_components/.


### Core & Paper Elements - https://www.polymer-project.org/docs/elements/paper-elements.html

##paper-input - ( bower install --save Polymer/paper-'element_name' ). Used $ only for evidentiate the instructions

$ bower install Polymer/paper-input    OK

##paper-tabs

$ bower install Polymer/paper-tabs    OK
.
.
.
$ bower install Polymer/core-drawer-panel    OK

$ bower install Polymer/core-list    OK
.
.
.

### Google Web Components - http://googlewebcomponents.github.io/

##<google-signin>

$ bower install GoogleWebComponents/google-signin     OK

##<google-hangout-button>

$ bower install GoogleWebComponents/google-hangout-button     OK

##<google-map>

$ bower install GoogleWebComponents/google-map      OK

##<google-youtube>

$ bower install GoogleWebComponents/google-youtube     OK

##<google-streetview-pano>

$ bower install GoogleWebComponents/google-streetview-pano      OK

##<google-apis>

$ bower install GoogleWebComponents/google-apis     OK

##<google-chart>

$ bower install GoogleWebComponents/google-chart    OK

##<google-sheets>

$ bower install GoogleWebComponents/google-sheets   OK

##<google-youtube-upload>

$ bower install GoogleWebComponents/google-youtube-upload   OK


=======================

LINK: https://docs.angularjs.org/api/ng/function

      http://googlewebcomponents.github.io/

      https://www.firebase.com/docs

=======================



###### TO DO #####

0) on Koding VM: install bower, Firebase, Polymer (font, core, paper) & Google Web Components. Create elementary Firebase db.

1) login page with Firebase auth (by email, Google & Github)

2) all .js files in util.js called by any page

3) Firebase data (add, remove, update data), from the app page, but also from code (myFirebaseRef)


# LICENSE

[The MIT LICENSE (MIT)](http://opensource.org/licenses/MIT)


